import './style.css';
import 'whatwg-fetch';

// Initialize LIFF SDK
liff
  .init({ liffId: '1661198134-2p6eyWoq' })
  .then(() => {
    // LIFF SDK initialized successfully
    console.log('LIFF initialization finished');
    // Your web app's Firebase configuration
    var firebaseConfig = {
      apiKey: 'AIzaSyCVbV7T7_KIPg5SXdS8w6OEVAsFFHoq3_c',
      authDomain: 'liff-db.firebaseapp.com',
      databaseURL:
        'https://liff-db-default-rtdb.asia-southeast1.firebasedatabase.app',
      projectId: 'liff-db',
      storageBucket: 'liff-db.appspot.com',
      messagingSenderId: '762947850725',
      appId: '1:762947850725:web:e46cb7da49ad802eb85f0c',
    };

    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);

    // Get a reference to the database service
    var database = firebase.database();

    // Check if the user is logged in
    if (liff.isLoggedIn()) {
      // User is already logged in, proceed with the app
      startApp();
    } else {
      // User is not logged in, display the login button
      document.getElementById('loginButton').style.display = 'block';
    }

    // Handle login button click
    document
      .getElementById('loginButton')
      .addEventListener('click', function () {
        // Login using LIFF
        liff.login();
      });

    // Function to start the app
    function startApp() {
      // Hide the login button
      document.getElementById('loginButton').style.display = 'none';

      // Handle form submission
      document
        .getElementById('dataEntryForm')
        .addEventListener('submit', function (event) {
          event.preventDefault(); // Prevent form submission

          // Get the input values
          var name = document.getElementById('nameInput').value;
          var email = document.getElementById('emailInput').value;
          var tel = document.getElementById('telInput').value;
          var detail = document.getElementById('detailInput').value;
          var picture = document.getElementById('pictureInput').value; // Note: Currently, you can only get the file name, not the file itself
          var latitude = document.getElementById('latitudeInput').value;
          var longitude = document.getElementById('longitudeInput').value;

          // Save the data to Firebase
          var newEntryRef = database.ref('entries').push({
            name: name,
            email: email,
            tel: tel,
            detail: detail,
            picture: picture,
            latitude: latitude,
            longitude: longitude,
          });

          // Get the unique entry ID generated by Firebase
          var entryId = newEntryRef.key;

          // Retrieve the user's LINE user ID
          liff
            .getProfile()
            .then(function (profile) {
              var userLineId = profile.userId;

              // Update the entry with the user's LINE user ID
              database.ref('entries/' + entryId).update({
                userLineId: userLineId,
              });

              // Send Flex Message (LIFF) to the user
              sendFlexMessageToUser(
                userLineId,
                name,
                email,
                tel,
                detail,
                latitude,
                longitude
              );

              // Clear the form
              document.getElementById('dataEntryForm').reset();
            })
            .catch(function (error) {
              console.log(error);
            });
        });

      // Handle "Get Location" button click
      document
        .getElementById('getLocationBtn')
        .addEventListener('click', function () {
          // Get the user's current location
          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
              function (position) {
                var latitude = position.coords.latitude;
                var longitude = position.coords.longitude;

                // Format the location as text
                var locationText =
                  'Latitude: ' + latitude + ', Longitude: ' + longitude;

                // Display the location
                document.getElementById('locationDisplay').textContent =
                  locationText;

                // Update the input fields with the location values
                document.getElementById('latitudeInput').value = latitude;
                document.getElementById('longitudeInput').value = longitude;
              },
              function (error) {
                console.log(error);
              }
            );
          } else {
            console.log('Geolocation is not supported by this browser.');
          }
        });

      // Function to send Flex Message to the user
      function sendFlexMessageToUser(
        userLineId,
        name,
        email,
        tel,
        detail,
        latitude,
        longitude
      ) {
        // Prepare the Flex Message (LIFF)
        var flexMessage = {
          type: 'flex',
          altText: 'Data Added',
          contents: {
            // Your Flex Message contents here
          },
        };

        var headers = {
          Authorization: 'Bearer eb5db23d6356d92fba4bf0c5f5a7d9fe', // Replace with your LINE Messaging API channel access token
          'Content-Type': 'application/json',
        };

        var payload = {
          to: userLineId,
          messages: [flexMessage],
        };

        fetch(
          'https://cors-anywhere.herokuapp.com/https://api.line.me/v2/bot/message/push',
          {
            method: 'POST',
            headers: headers,
            body: JSON.stringify(payload),
          }
        )
          .then(function (response) {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(function (data) {
            console.log('Response data:', data);
          })
          .catch(function (error) {
            console.log('Error:', error);
          });
      }
    }
  })
  .catch((error) => {
    console.log('LIFF initialization failed', error);
  });
